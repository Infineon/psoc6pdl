<?xml version="1.0" encoding="utf-8"?>


<!--****************************************************************************
* \file connectivity_wifi.cypersonality
* \version 1.0
*
* \brief
* Personality description file for WiFi part of Low Power Assistant.
*
********************************************************************************
* \copyright
* Copyright 2019 Cypress Semiconductor Corporation
* SPDX-License-Identifier: Apache-2.0
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*****************************************************************************-->

<Personality id="connectivity_wifi" name="WiFi" version="1.0" path="" xmlns="http://cypress.com/xsd/cyhwpersonality_v1">
  <Dependencies>
    <IpBlock name="43xxx_wifi" />
    <Resource name="wifi\.power" used="true" />
  </Dependencies>
  <ExposedMembers>
  </ExposedMembers>

  <Parameters>
    <ParamDoc id="doc" name="Configuration Help" group="Documentation" default="file:///`${cy_libs_path(&quot;psoc6sw&quot;)}`/docs/pdl_api_reference_manual/html/group__group__syspm.html" linkText="Open WLAN LP Documentation" visible="true" desc="Opens the WLAN Low Power Assistant Documentation" />

    <!-- Host wake settings -->
    <ParamBool id="hostWake" name="Enable" group="Host Wake Configuration" default="true" visible="true" editable="true" desc="Enable/disable host wake configuration" />
    <ParamBlock id="hostIRQ" blockType="ioss\.port\.pin" name="Host Device Interrupt Pin" group="Host Wake Configuration" canBeEmpty="`${hostWake == false}`" visible="`${hostWake}`" desc="Select the host pin which is connected to WiFi device's WL HOST WAKE signal." />
    <ParamChoice id="deviceIRQPin" name="WiFi Device Interrupt Pin" group="Host Wake Configuration" default="CY_WIFI_DEVICE_IRQ_GPIO_0" visible="`${hostWake}`" editable="false" desc="WiFi device GPIO_0 is reserved as host wake-up interrupt request pin (WL HOST WAKE)">
      <Entry name="GPIO_0 (WL_HOST_WAKE)" value="CY_WIFI_DEVICE_IRQ_GPIO_0" visible="true" />
    </ParamChoice>
    
    <!-- ARP Offload settings -->
    <ParamBool id="arpOffload" name="Enable" group="ARP Offload" default="false" visible="true" editable="true" desc="Enable ARP offload feature" />
    <ParamChoice id="arpResponse" name="ARP Offload When Host Awake" group="ARP Offload" default="0u" visible="`${arpOffload}`" editable="`${arpOffload}`" desc="Respond to ARP Requests when Awake">
      <Entry name="Disabled" value="0u" visible="true" />
      <Entry name="Host Auto Reply" value="CY_ARP_OL_AGENT_ENABLE | CY_ARP_OL_HOST_AUTO_REPLY_ENABLE" visible="true" />
      <Entry name="Peer Auto Reply" value="CY_ARP_OL_PEER_AUTO_REPLY_ENABLE" visible="true" />
      <Entry name="Host and Peer Auto Reply" value="CY_ARP_OL_HOST_AUTO_REPLY_ENABLE | CY_ARP_OL_PEER_AUTO_REPLY_ENABLE" visible="true" />
    </ParamChoice>
    <ParamChoice id="arpInSleep" name="ARP Offload When Host Sleeping" group="ARP Offload" default="CY_ARP_OL_PEER_AUTO_REPLY_ENABLE" visible="`${arpOffload}`" editable="`${arpOffload}`" desc="Respond to ARP Requests when Sleeping">
      <Entry name="Disabled" value="0u" visible="true" />
      <Entry name="Peer Auto Reply" value="CY_ARP_OL_PEER_AUTO_REPLY_ENABLE" visible="true" />
    </ParamChoice>
    <ParamBool id="arpSnoopHostIp" name="Snoop Host IP from traffic when ARP Offload enabled " group="ARP Offload" default="false" visible="`${arpOffload}`" editable="`${arpOffload}`" desc="The host IP address is snooped from an ARP Request. If disabled, the WLAN Device will need to be informed of the Host IP address when the network interface is configured (statically or dynamically via DHCP)." />
    <ParamRange id="peerAge" name="ARP Offload Cache entries expire after (s)" group="ARP Offload" default="1200" min="1" max="4294967295" resolution="1" visible="`${arpOffload}`" editable="`${arpOffload}`" desc="When the ARP cache table is offloaded from the host to the device, table entries are subject to an aging value called peer age." />

    <!-- AWS MQTT Filters -->
    <!-- TLS Configuration -->
    <ParamBool id="configTLS" name="Enable MQTT TLS Filter" group="AWS MQTT Filters" default="true" visible="true" editable="true" desc="Enable/disable AWS MQTT filter for TLS connections" />  
    <ParamString id="configTLS_id" name="Filter ID" group="MQTT TLS Filter Configuration" default="0" visible="`${configTLS}`" editable="false" desc="Filter ID" />
    <ParamChoice id="filterTLSAction" name="Action" group="MQTT TLS Filter Configuration" default="CY_PF_ACTION_KEEP" visible="`${configTLS}`" editable="true" desc="Filter can either pass up packets that match the filter to the host (Keep) or drop them so the host never gets them (Discard)." >
      <Entry name="Keep" value="CY_PF_ACTION_KEEP" visible="true" />
      <Entry name="Discard" value="CY_PF_ACTION_DISCARD" visible="true" />
    </ParamChoice>
    <ParamChoice id="filterTLSAllow" name="When Active" group="MQTT TLS Filter Configuration" default="CY_PF_ACTIVE_SLEEP" visible="`${configTLS}`" editable="true" desc="Defines when the filter is active, when the host is awake, when it goes to sleep, or both." >
      <Entry name="Sleep" value="CY_PF_ACTIVE_SLEEP" visible="true" />
      <Entry name="Wake" value="CY_PF_ACTIVE_WAKE" visible="true" />
      <Entry name="Always" value="CY_PF_ACTIVE_SLEEP | CY_PF_ACTIVE_WAKE" visible="true" />
    </ParamChoice>
    <ParamChoice id="filterTLSProt" name="Protocol" group="MQTT TLS Filter Configuration" default="CY_PF_PROTOCOL_TCP" visible="`${configTLS}`" editable="true" desc="Choose communication protocol" >
      <Entry name="TCP" value="CY_PF_PROTOCOL_TCP" visible="true" />
      <Entry name="UDP" value="CY_PF_PROTOCOL_UDP" visible="true" />
    </ParamChoice>
    <ParamChoice id="filterTLSDir" name="Direction" group="MQTT TLS Filter Configuration" default="PF_PN_PORT_DEST" visible="`${configTLS}`" editable="true" desc="Choose source or destination port" >
      <Entry name="Destination Port" value="PF_PN_PORT_DEST" visible="true" />
      <Entry name="Source Port" value="PF_PN_PORT_SOURCE" visible="true" />
     </ParamChoice>
    <ParamRange id="filterTLSPort" name="Port Number" group="MQTT TLS Filter Configuration" default="8883" min="0" max="65535" resolution="1" visible="`${configTLS}`" editable="false" desc="Port number for TLS connections filter" />

    <!-- Non TLS Configuration -->
    <ParamBool id="configNonTLS" name="Enable MQTT Filter" group="AWS MQTT Filters" default="true" visible="true" editable="true" desc="Enable/disable packet filter configuration 1" />   
    <ParamString id="configNonTLS_id" name="Filter ID" group="MQTT Filter Configuration" default="`${configTLS ? 1 : 0}`" visible="`${configNonTLS}`" editable="false" desc="Filter ID" />
    <ParamChoice id="filterNonTLSAction" name="Action" group="MQTT Filter Configuration" default="CY_PF_ACTION_KEEP" visible="`${configNonTLS}`" editable="true" desc="Filter can either pass up packets that match the filter to the host (Keep) or drop them so the host never gets them (Discard)." >
      <Entry name="Keep" value="CY_PF_ACTION_KEEP" visible="true" />
      <Entry name="Discard" value="CY_PF_ACTION_DISCARD" visible="true" />
    </ParamChoice>
    <ParamChoice id="filterNonTLSAllow" name="When Active" group="MQTT Filter Configuration" default="CY_PF_ACTIVE_SLEEP" visible="`${configNonTLS}`" editable="true" desc="Defines when the filter is active, when the host is awake, when it goes to sleep, or both." >
      <Entry name="Sleep" value="CY_PF_ACTIVE_SLEEP" visible="true" />
      <Entry name="Wake" value="CY_PF_ACTIVE_WAKE" visible="true" />
      <Entry name="Always" value="CY_PF_ACTIVE_SLEEP | CY_PF_ACTIVE_WAKE" visible="true" />
    </ParamChoice>
    <ParamChoice id="filterNonTLSProt" name="Protocol" group="MQTT Filter Configuration" default="CY_PF_PROTOCOL_TCP" visible="`${configNonTLS}`" editable="true" desc="Choose communication protocol" >
      <Entry name="TCP" value="CY_PF_PROTOCOL_TCP" visible="true" />
      <Entry name="UDP" value="CY_PF_PROTOCOL_UDP" visible="true" />
    </ParamChoice>
    <ParamChoice id="filterNonTLSDir" name="Direction" group="MQTT Filter Configuration" default="PF_PN_PORT_DEST" visible="`${configNonTLS}`" editable="true" desc="Choose source or destination port" >
      <Entry name="Destination Port" value="PF_PN_PORT_DEST" visible="true" />
      <Entry name="Source Port" value="PF_PN_PORT_SOURCE" visible="true" />
    </ParamChoice>
    <ParamRange id="filterNonTLSPort" name="Port Number" group="MQTT Filter Configuration" default="1883" min="0" max="65535" resolution="1" visible="`${configNonTLS}`" editable="false" desc="Port number for Non TLS connections filter" />
 
    <Repeat count="20">
      <ParamBool id="config$idx" name="Enable Filter Configuration $idx" group="Packet Filters" default="false" visible="true" editable="true" desc="Enable/disable packet filter configuration $idx" />  
    </Repeat>
    
    <ParamString id="config0_id" name="Filter ID" group="Packet Filter Configuration 0" default="`${(configTLS ? 1 : 0) + (configNonTLS ? 1 : 0)}`" visible="`${config0}`" editable="false" desc="Filter ID" />
    <ParamString id="config1_id" name="Filter ID" group="Packet Filter Configuration 1" default="`${(configTLS ? 1 : 0) + (configNonTLS ? 1 : 0) + (config0 ? 1 : 0)}`" visible="`${config1}`" editable="false" desc="Filter ID" />
    <ParamString id="config2_id" name="Filter ID" group="Packet Filter Configuration 2" default="`${(configTLS ? 1 : 0) + (configNonTLS ? 1 : 0) + (config0 ? 1 : 0) + (config1 ? 1 : 0)}`" visible="`${config2}`" editable="false" desc="Filter ID" />
    <ParamString id="config3_id" name="Filter ID" group="Packet Filter Configuration 3" default="`${(configTLS ? 1 : 0) + (configNonTLS ? 1 : 0) + (config0 ? 1 : 0) + (config1 ? 1 : 0) + (config2 ? 1 : 0)}`" visible="`${config3}`" editable="false" desc="Filter ID" />
    <ParamString id="config4_id" name="Filter ID" group="Packet Filter Configuration 4" default="`${(configTLS ? 1 : 0) + (configNonTLS ? 1 : 0) + (config0 ? 1 : 0) + (config1 ? 1 : 0) + (config2 ? 1 : 0) + (config3 ? 1 : 0)}`" visible="`${config4}`" editable="false" desc="Filter ID" />
    <ParamString id="config5_id" name="Filter ID" group="Packet Filter Configuration 5" default="`${(configTLS ? 1 : 0) + (configNonTLS ? 1 : 0) + (config0 ? 1 : 0) + (config1 ? 1 : 0) + (config2 ? 1 : 0) + (config3 ? 1 : 0) + (config4 ? 1 : 0)}`" visible="`${config5}`" editable="false" desc="Filter ID" />
    <ParamString id="config6_id" name="Filter ID" group="Packet Filter Configuration 6" default="`${(configTLS ? 1 : 0) + (configNonTLS ? 1 : 0) + (config0 ? 1 : 0) + (config1 ? 1 : 0) + (config2 ? 1 : 0) + (config3 ? 1 : 0) + (config4 ? 1 : 0) + (config5 ? 1 : 0)}`" visible="`${config6}`" editable="false" desc="Filter ID" />
    <ParamString id="config7_id" name="Filter ID" group="Packet Filter Configuration 7" default="`${(configTLS ? 1 : 0) + (configNonTLS ? 1 : 0) + (config0 ? 1 : 0) + (config1 ? 1 : 0) + (config2 ? 1 : 0) + (config3 ? 1 : 0) + (config4 ? 1 : 0) + (config5 ? 1 : 0) + (config6 ? 1 : 0)}`" visible="`${config7}`" editable="false" desc="Filter ID" />
    <ParamString id="config8_id" name="Filter ID" group="Packet Filter Configuration 8" default="`${(configTLS ? 1 : 0) + (configNonTLS ? 1 : 0) + (config0 ? 1 : 0) + (config1 ? 1 : 0) + (config2 ? 1 : 0) + (config3 ? 1 : 0) + (config4 ? 1 : 0) + (config5 ? 1 : 0) + (config6 ? 1 : 0) + (config7 ? 1 : 0)}`" visible="`${config8}`" editable="false" desc="Filter ID" />
    <ParamString id="config9_id" name="Filter ID" group="Packet Filter Configuration 9" default="`${(configTLS ? 1 : 0) + (configNonTLS ? 1 : 0) + (config0 ? 1 : 0) + (config1 ? 1 : 0) + (config2 ? 1 : 0) + (config3 ? 1 : 0) + (config4 ? 1 : 0) + (config5 ? 1 : 0) + (config6 ? 1 : 0) + (config7 ? 1 : 0) + (config8 ? 1 : 0)}`" visible="`${config9}`" editable="false" desc="Filter ID" />
    <ParamString id="config10_id" name="Filter ID" group="Packet Filter Configuration 10" default="`${(configTLS ? 1 : 0) + (configNonTLS ? 1 : 0) + (config0 ? 1 : 0) + (config1 ? 1 : 0) + (config2 ? 1 : 0) + (config3 ? 1 : 0) + (config4 ? 1 : 0) + (config5 ? 1 : 0) + (config6 ? 1 : 0) + (config7 ? 1 : 0) + (config8 ? 1 : 0) + (config9 ? 1 : 0)}`" visible="`${config10}`" editable="false" desc="Filter ID" />
    <ParamString id="config11_id" name="Filter ID" group="Packet Filter Configuration 11" default="`${(configTLS ? 1 : 0) + (configNonTLS ? 1 : 0) + (config0 ? 1 : 0) + (config1 ? 1 : 0) + (config2 ? 1 : 0) + (config3 ? 1 : 0) + (config4 ? 1 : 0) + (config5 ? 1 : 0) + (config6 ? 1 : 0) + (config7 ? 1 : 0) + (config8 ? 1 : 0) + (config9 ? 1 : 0) + (config10 ? 1 : 0)}`" visible="`${config11}`" editable="false" desc="Filter ID" />
    <ParamString id="config12_id" name="Filter ID" group="Packet Filter Configuration 12" default="`${(configTLS ? 1 : 0) + (configNonTLS ? 1 : 0) + (config0 ? 1 : 0) + (config1 ? 1 : 0) + (config2 ? 1 : 0) + (config3 ? 1 : 0) + (config4 ? 1 : 0) + (config5 ? 1 : 0) + (config6 ? 1 : 0) + (config7 ? 1 : 0) + (config8 ? 1 : 0) + (config9 ? 1 : 0) + (config10 ? 1 : 0) + (config11 ? 1 : 0)}`" visible="`${config12}`" editable="false" desc="Filter ID" />
    <ParamString id="config13_id" name="Filter ID" group="Packet Filter Configuration 13" default="`${(configTLS ? 1 : 0) + (configNonTLS ? 1 : 0) + (config0 ? 1 : 0) + (config1 ? 1 : 0) + (config2 ? 1 : 0) + (config3 ? 1 : 0) + (config4 ? 1 : 0) + (config5 ? 1 : 0) + (config6 ? 1 : 0) + (config7 ? 1 : 0) + (config8 ? 1 : 0) + (config9 ? 1 : 0) + (config10 ? 1 : 0) + (config11 ? 1 : 0) + (config12 ? 1 : 0)}`" visible="`${config13}`" editable="false" desc="Filter ID" />
    <ParamString id="config14_id" name="Filter ID" group="Packet Filter Configuration 14" default="`${(configTLS ? 1 : 0) + (configNonTLS ? 1 : 0) + (config0 ? 1 : 0) + (config1 ? 1 : 0) + (config2 ? 1 : 0) + (config3 ? 1 : 0) + (config4 ? 1 : 0) + (config5 ? 1 : 0) + (config6 ? 1 : 0) + (config7 ? 1 : 0) + (config8 ? 1 : 0) + (config9 ? 1 : 0) + (config10 ? 1 : 0) + (config11 ? 1 : 0) + (config12 ? 1 : 0) + (config13 ? 1 : 0)}`" visible="`${config14}`" editable="false" desc="Filter ID" />
    <ParamString id="config15_id" name="Filter ID" group="Packet Filter Configuration 15" default="`${(configTLS ? 1 : 0) + (configNonTLS ? 1 : 0) + (config0 ? 1 : 0) + (config1 ? 1 : 0) + (config2 ? 1 : 0) + (config3 ? 1 : 0) + (config4 ? 1 : 0) + (config5 ? 1 : 0) + (config6 ? 1 : 0) + (config7 ? 1 : 0) + (config8 ? 1 : 0) + (config9 ? 1 : 0) + (config10 ? 1 : 0) + (config11 ? 1 : 0) + (config12 ? 1 : 0) + (config13 ? 1 : 0) + (config14 ? 1 : 0)}`" visible="`${config15}`" editable="false" desc="Filter ID" />
    <ParamString id="config16_id" name="Filter ID" group="Packet Filter Configuration 16" default="`${(configTLS ? 1 : 0) + (configNonTLS ? 1 : 0) + (config0 ? 1 : 0) + (config1 ? 1 : 0) + (config2 ? 1 : 0) + (config3 ? 1 : 0) + (config4 ? 1 : 0) + (config5 ? 1 : 0) + (config6 ? 1 : 0) + (config7 ? 1 : 0) + (config8 ? 1 : 0) + (config9 ? 1 : 0) + (config10 ? 1 : 0) + (config11 ? 1 : 0) + (config12 ? 1 : 0) + (config13 ? 1 : 0) + (config14 ? 1 : 0) + (config15 ? 1 : 0)}`" visible="`${config16}`" editable="false" desc="Filter ID" />
    <ParamString id="config17_id" name="Filter ID" group="Packet Filter Configuration 17" default="`${(configTLS ? 1 : 0) + (configNonTLS ? 1 : 0) + (config0 ? 1 : 0) + (config1 ? 1 : 0) + (config2 ? 1 : 0) + (config3 ? 1 : 0) + (config4 ? 1 : 0) + (config5 ? 1 : 0) + (config6 ? 1 : 0) + (config7 ? 1 : 0) + (config8 ? 1 : 0) + (config9 ? 1 : 0) + (config10 ? 1 : 0) + (config11 ? 1 : 0) + (config12 ? 1 : 0) + (config13 ? 1 : 0) + (config14 ? 1 : 0) + (config15 ? 1 : 0) + (config16 ? 1 : 0)}`" visible="`${config17}`" editable="false" desc="Filter ID" />
    <ParamString id="config18_id" name="Filter ID" group="Packet Filter Configuration 18" default="`${(configTLS ? 1 : 0) + (configNonTLS ? 1 : 0) + (config0 ? 1 : 0) + (config1 ? 1 : 0) + (config2 ? 1 : 0) + (config3 ? 1 : 0) + (config4 ? 1 : 0) + (config5 ? 1 : 0) + (config6 ? 1 : 0) + (config7 ? 1 : 0) + (config8 ? 1 : 0) + (config9 ? 1 : 0) + (config10 ? 1 : 0) + (config11 ? 1 : 0) + (config12 ? 1 : 0) + (config13 ? 1 : 0) + (config14 ? 1 : 0) + (config15 ? 1 : 0) + (config16 ? 1 : 0) + (config17 ? 1 : 0)}`" visible="`${config18}`" editable="false" desc="Filter ID" />
    <ParamString id="config19_id" name="Filter ID" group="Packet Filter Configuration 19" default="`${(configTLS ? 1 : 0) + (configNonTLS ? 1 : 0) + (config0 ? 1 : 0) + (config1 ? 1 : 0) + (config2 ? 1 : 0) + (config3 ? 1 : 0) + (config4 ? 1 : 0) + (config5 ? 1 : 0) + (config6 ? 1 : 0) + (config7 ? 1 : 0) + (config8 ? 1 : 0) + (config9 ? 1 : 0) + (config10 ? 1 : 0) + (config11 ? 1 : 0) + (config12 ? 1 : 0) + (config13 ? 1 : 0) + (config14 ? 1 : 0) + (config15 ? 1 : 0) + (config16 ? 1 : 0) + (config17 ? 1 : 0) + (config18 ? 1 : 0)}`" visible="`${config19}`" editable="false" desc="Filter ID" />
    
    <!-- Packet Filter Configurations -->
    <Repeat count="20">
      <ParamChoice id="filter$idx_type" name="Filter Type" group="Packet Filter Configuration $idx" default="CY_PF_PORT_FILTER" visible="`${config$idx}`" editable="true" desc="Each port filter can specify either a single port or a block of port numbers" >
        <Entry name="Port Filter" value="CY_PF_PORT_FILTER" visible="true" />
        <Entry name="Port Filter Block" value="CY_PF_PORT_BLOCK_FILTER" visible="true" />
        <Entry name="Ether Type" value="CY_PF_PORT_ETHER_TYPE_FILTER" visible="true" />
        <Entry name="IP Type" value="CY_PF_PORT_IP_TYPE_FILTER" visible="true" />
      </ParamChoice>
      <ParamBool id="filter$idx_portnum" name="Filter$idx Portnum" group="Internal" default="`${filter$idx_type eq CY_PF_PORT_FILTER || filter$idx_type eq CY_PF_PORT_BLOCK_FILTER}`" visible="false" editable="false" desc="" />
      <ParamChoice id="filter$idx_action" name="Action" group="Packet Filter Configuration $idx" default="CY_PF_ACTION_KEEP" visible="`${config$idx}`" editable="true" desc="Filter can either pass up packets that match the filter to the host (Keep) or drop them so the host never gets them (Discard)." >
        <Entry name="Keep" value="CY_PF_ACTION_KEEP" visible="true" />
        <Entry name="Discard" value="CY_PF_ACTION_DISCARD" visible="true" />
      </ParamChoice>
      <ParamChoice id="filter$idx_allow" name="When Active" group="Packet Filter Configuration $idx" default="CY_PF_ACTIVE_SLEEP" visible="`${config$idx}`" editable="true" desc="Defines when the filter is active, when the host is awake, when it goes to sleep, or both." >
        <Entry name="Sleep" value="CY_PF_ACTIVE_SLEEP" visible="true" />
        <Entry name="Wake" value="CY_PF_ACTIVE_WAKE" visible="true" />
        <Entry name="Always" value="CY_PF_ACTIVE_SLEEP | CY_PF_ACTIVE_WAKE" visible="true" />
      </ParamChoice>
      <ParamChoice id="filter$idx_prot" name="Protocol" group="Packet Filter Configuration $idx" default="CY_PF_PROTOCOL_TCP" visible="`${config$idx &amp;&amp; filter$idx_portnum}`" editable="true" desc="Choose communication protocol" >
        <Entry name="TCP" value="CY_PF_PROTOCOL_TCP" visible="true" />
        <Entry name="UDP" value="CY_PF_PROTOCOL_UDP" visible="true" />
      </ParamChoice>
      <ParamChoice id="filter$idx_dir" name="Direction" group="Packet Filter Configuration $idx" default="PF_PN_PORT_DEST" visible="`${config$idx &amp;&amp; filter$idx_portnum}`" editable="true" desc="Choose source or destination port" >
        <Entry name="Destination Port" value="PF_PN_PORT_DEST" visible="true" />
        <Entry name="Source Port" value="PF_PN_PORT_SOURCE" visible="true" />
      </ParamChoice>
      <ParamRange id="filter$idx_ether_type" name="EtherType" group="Packet Filter Configuration $idx" default="0" min="0" max="65535" resolution="1" visible="`${config$idx &amp;&amp; (filter$idx_type eq CY_PF_PORT_ETHER_TYPE_FILTER)}`" editable="true" desc="Enter EtherType value for desired protocol" /> 
      <ParamRange id="filter$idx_ip_type" name="IP Protocol" group="Packet Filter Configuration $idx" default="0" min="0" max="255" resolution="1" visible="`${config$idx &amp;&amp; (filter$idx_type eq CY_PF_PORT_IP_TYPE_FILTER)}`" editable="true" desc="Enter desired IP protocol number" /> 
      <ParamRange id="filter$idx_port" name="Port Number" group="Packet Filter Configuration $idx" default="1024" min="0" max="65535" resolution="1" visible="`${config$idx &amp;&amp; filter$idx_portnum}`" editable="true" desc="Either the single port to be filtered or the beginning of the block of contiguous numbers. When using a block, the starting port must be power of 2." />    
      <ParamRange id="filter$idx_end_port" name="Range" group="Packet Filter Configuration $idx" default="1023" min="0" max="65535" resolution="1" visible="`${config$idx &amp;&amp; (filter$idx_type eq CY_PF_PORT_BLOCK_FILTER)}`" editable="true" desc="Indicates the size of the block of port numbers, must be of the form (2^y - 1) and less than Port Number" />
    </Repeat>

    <ParamString id="numOfActiveFilters" name="NumOfContexts" group="Internal" default="`${(config0 ? 1 : 0) + (config1 ? 1 : 0) + (config2 ? 1 : 0) + (config3 ? 1 : 0) + (config4 ? 1 : 0) + (config5 ? 1 : 0) + (config6 ? 1 : 0) + (config7 ? 1 : 0) + (config8 ? 1 : 0) + (config9 ? 1 : 0) + (config10 ? 1 : 0) + (config11 ? 1 : 0) + (config12 ? 1 : 0) + (config13 ? 1 : 0) + (config14 ? 1 : 0) + (config15 ? 1 : 0) + (config16 ? 1 : 0) + (config17 ? 1 : 0) + (config18 ? 1 : 0) + (config19 ? 1 : 0) + (configTLS ? 1 : 0) + (configNonTLS ? 1 : 0)}`" visible="false" editable="false" desc="" />
    <ParamBool id="pktFilterEn" name="Packet filters Enabled" group="Internal" default="`${numOfActiveFilters != 0}`" visible="false" editable="false" desc="" />
    <ParamString id="longIndent" name="Long Indent" group="Internal" default="&#9;&#9;&#9;" visible="false" editable="false" desc="" />

  </Parameters>

  <DRCs>
    <DRC type="ERROR" text="The WiFi Host Wake Configuration has to be enabled when ARP Offload is enabled" condition="`${!hostWake &amp;&amp; arpOffload}`">
      <FixIt action="SET_PARAM" target="hostWake" value="true" valid="true" />
    </DRC>
    <DRC type="ERROR" text="The WiFi Host Wake Configuration has to be enabled when Packet filter is enabled" condition="`${!hostWake &amp;&amp; pktFilterEn}`">
      <FixIt action="SET_PARAM" target="hostWake" value="true" valid="true" />
    </DRC>
    <DRC type="ERROR" text="The Port Number must be of the form (2^x) for Filter Configuration $idx" condition="`${config$idx &amp;&amp; (filter$idx_type eq CY_PF_PORT_BLOCK_FILTER) &amp;&amp; ((filter$idx_port &amp; (filter$idx_port - 1)) != 0)}`" repeatCount="8" paramId="filter$idx_port">
    </DRC>
    <DRC type="ERROR" text="The Range must be of the form (2^y - 1) for Filter Configuration $idx" condition="`${config$idx &amp;&amp; (filter$idx_type eq CY_PF_PORT_BLOCK_FILTER) &amp;&amp; (((filter$idx_end_port + 1) &amp; filter$idx_end_port) != 0)}`" repeatCount="8" paramId="filter$idx_end_port">
    </DRC>
    <DRC type="ERROR" text="The Range must be less than Port Number for Filter Configuration $idx" condition="`${config$idx &amp;&amp; (filter$idx_type eq CY_PF_PORT_BLOCK_FILTER) &amp;&amp; (filter$idx_end_port &lt; filter$idx_port ? false : true)}`" repeatCount="8" paramId="filter$idx_end_port">
    </DRC>
    <DRC type="ERROR" text="The WiFi Host Wake Configuration has to be enabled when System Idle Power Mode is set to Deep Sleep." condition="`${hasExposedMember(&quot;srss[0].power[0]&quot;, &quot;deepsleepWhenIdle&quot;) ? (getExposedMember(&quot;srss[0].power[0]&quot;, &quot;deepsleepWhenIdle&quot;) &amp;&amp; !hostWake) : false}`">
      <FixIt action="SET_PARAM" target="hostWake" value="true" valid="true" />
    </DRC>
    <DRC type="ERROR" text="Enable MCU Personality v1.2 or later when using WiFi Host Wake Configuration." condition="`${!hasExposedMember(&quot;srss[0].power[0]&quot;, &quot;deepsleepWhenIdle&quot;) &amp;&amp; hostWake}`">
      <FixIt action="ENABLE_BLOCK" target="`${&quot;srss[0].power[0]&quot;}`" value="" valid="true" />
    </DRC>
  </DRCs>

  <!-- Generated firmware -->
  <ConfigFirmware>
    <ConfigInclude value="cy_lpa_wifi_shim.h" include="true" />
    <ConfigInclude value="cy_lpa_wifi_ol_debug.h" include="true" />
    <ConfigInclude value="cy_lpa_wifi_ol.h" include="true" />
    <ConfigInclude value="cy_lpa_wifi_ol_common.h" include="true" />
    <ConfigInclude value="cy_lpa_wifi_arp_ol.h" include="`${arpOffload}`" />
    <ConfigInclude value="cy_lpa_wifi_pf_ol.h" include="`${pktFilterEn}`" />
  
    <ConfigDefine name="CY_CFG_ARP_OL_EN" public="false" value="(1u)" include="`${arpOffload}`" preventOverride="true" />
    <ConfigDefine name="CY_CFG_PF_OL_EN" public="false" value="(1u)" include="`${pktFilterEn}`" preventOverride="true" />
    <ConfigDefine name="CY_CFG_HOST_WAKE_EN" public="false" value="(1u)" include="`${hostWake}`" preventOverride="true" />

    <ConfigDefine name="CY_SDIO_BUS_NEEDS_OOB_INTR" public="true" value="(1u)" include="`${hostWake}`" preventOverride="false" />
    <ConfigDefine name="CYCFG_WIFI_HOST_WAKE_GPIO" public="true" value="(((`${hostIRQ}`_PORT_NUM) `${&quot;&lt;&lt;&quot;}` 16) + (`${hostIRQ}`_PIN))" include="`${hostWake}`" preventOverride="false" />
    <ConfigDefine name="CYCFG_WIFI_HOST_WAKE_GPIO_DM" public="true" value="(`${hostIRQ}`_config.driveMode)" include="`${hostWake}`" preventOverride="false" />
    <ConfigDefine name="CYCFG_WIFI_HOST_WAKE_IRQ_EVENT" public="true" value="(`${hostIRQ}`_config.intEdge)" include="`${hostWake}`" preventOverride="false" />

    <!-- ARP Offload section-->
    <ConfigDefine name="CY_ARP_OL_FEATURE_AWAKE_ENABLE_MASK_0" public="true" value="(`${arpResponse}``${arpSnoopHostIp ? (&quot; | CY_ARP_OL_SNOOP_ENABLE&quot;) : &quot;&quot;}`)" include="`${arpOffload}`" preventOverride="false" />
    <ConfigDefine name="CY_ARP_OL_FEATURE_SLEEP_ENABLE_MASK_0" public="true" value="(`${arpInSleep}`)" include="`${arpOffload}`" preventOverride="false" />    
    <ConfigDefine name="CY_ARP_OL_PEER_AGE_0" public="true" value="(`${peerAge}`UL)" include="`${arpOffload}`" preventOverride="false" />

    <ConfigVariable const="false" type="arp_ol_t" name="arp_ol_0_ctxt" public="false" include="`${arpOffload}`" />
    <ConfigVariable const="false" type="pf_ol_t" name="pf_ol_0" public="false" include="`${pktFilterEn}`" />

    <ConfigStruct name="arp_ol_cfg_0" type="arp_ol_cfg_t" const="true" public="false" include="`${arpOffload}`" isArray="false" >
      <Member name="awake_enable_mask" value="CY_ARP_OL_FEATURE_AWAKE_ENABLE_MASK_0" />
      <Member name="sleep_enable_mask" value="CY_ARP_OL_FEATURE_SLEEP_ENABLE_MASK_0" /> 
      <Member name="peerage" value="CY_ARP_OL_PEER_AGE_0" />
    </ConfigStruct>
    
    <ConfigStruct name="cy_pf_ol_cfg_0" type="cy_pf_ol_cfg_t" const="true" isArray="true" public="false" include="`${pktFilterEn}`">
      <Member name="`${configTLS_id}`u" value="{.feature = CY_PF_OL_FEAT_PORTNUM,&#xA;`${longIndent}`.bits = `${filterTLSAllow}``${filterTLSAction eq CY_PF_ACTION_DISCARD ? (&quot; | CY_PF_ACTION_DISCARD&quot;) : (&quot;&quot;)}`,&#xA;`${longIndent}`.id = `${configTLS_id}`u,&#xA;`${longIndent}`.u.pf.portnum.portnum = `${filterTLSPort}`u,&#xA;`${longIndent}`.u.pf.portnum.range = 0u,&#xA;`${longIndent}`.u.pf.portnum.direction = `${filterTLSDir}`,&#xA;`${longIndent}`.u.pf.proto = `${filterTLSProt}`}" include="`${configTLS}`" />
      
      <Member name="`${configNonTLS_id}`u" value="{.feature = CY_PF_OL_FEAT_PORTNUM,&#xA;`${longIndent}`.bits = `${filterNonTLSAllow}``${filterNonTLSAction eq CY_PF_ACTION_DISCARD ? (&quot; | CY_PF_ACTION_DISCARD&quot;) : (&quot;&quot;)}`,&#xA;`${longIndent}`.id = `${configNonTLS_id}`u,&#xA;`${longIndent}`.u.pf.portnum.portnum = `${filterNonTLSPort}`u,&#xA;`${longIndent}`.u.pf.portnum.range = 0u,&#xA;`${longIndent}`.u.pf.portnum.direction = `${filterNonTLSDir}`,&#xA;`${longIndent}`.u.pf.proto = `${filterNonTLSProt}`}" include="`${configNonTLS}`" />
      
      <Member name="`${config##_id}`u" value="{.feature = `${filter##_type eq CY_PF_PORT_ETHER_TYPE_FILTER ? (&quot;CY_PF_OL_FEAT_ETHTYPE&quot;) : (filter##_type eq CY_PF_PORT_IP_TYPE_FILTER ? (&quot;CY_PF_OL_FEAT_IPTYPE&quot;) : (&quot;CY_PF_OL_FEAT_PORTNUM&quot;))}`,&#xA;`${longIndent}`.bits = `${filter##_allow}``${filter##_action eq CY_PF_ACTION_DISCARD ? (&quot; | CY_PF_ACTION_DISCARD&quot;) : (&quot;&quot;)}`,&#xA;`${longIndent}`.id = `${config##_id}`u,&#xA;`${longIndent}``${filter##_type eq CY_PF_PORT_ETHER_TYPE_FILTER ? (&quot;.u.eth.ethtype = &quot;) : (&quot;&quot;)}``${filter##_type eq CY_PF_PORT_ETHER_TYPE_FILTER ? (filter##_ether_type) : (&quot;&quot;)}``${filter##_type eq CY_PF_PORT_ETHER_TYPE_FILTER ? (&quot;u&quot;) : (&quot;&quot;)}``${filter##_type eq CY_PF_PORT_IP_TYPE_FILTER ? (&quot;.u.ip.ip_type = &quot;) : (&quot;&quot;)}``${filter##_type eq CY_PF_PORT_IP_TYPE_FILTER ? (filter##_ip_type) : (&quot;&quot;)}``${filter##_type eq CY_PF_PORT_IP_TYPE_FILTER ? (&quot;u&quot;) : (&quot;&quot;)}``${filter##_portnum ? (&quot;.u.pf.portnum.portnum = &quot;) : (&quot;&quot;)}``${filter##_portnum ? (filter##_port) : (&quot;&quot;)}``${filter##_portnum ? (&quot;u,&#xA;&quot;) : (&quot;&quot;)}``${filter##_portnum ? (longIndent) : (&quot;&quot;)}``${filter##_portnum ? (&quot;.u.pf.portnum.range = &quot;) : (&quot;&quot;)}``${filter##_portnum ? (filter##_type eq CY_PF_PORT_BLOCK_FILTER ? filter##_end_port : 0) : (&quot;&quot;)}``${filter##_portnum ? (&quot;u,&#xA;&quot;) : (&quot;&quot;)}``${filter##_portnum ? (longIndent) : (&quot;&quot;)}``${filter##_portnum ? (&quot;.u.pf.portnum.direction = &quot;) : (&quot;&quot;)}``${filter##_portnum ? (filter##_dir) : (&quot;&quot;)}``${filter##_portnum ? (&quot;,&#xA;&quot;) : (&quot;&quot;)}``${filter##_portnum ? (longIndent) : (&quot;&quot;)}``${filter##_portnum ? (&quot;.u.pf.proto = &quot;) : (&quot;&quot;)}``${filter##_portnum ? (filter##_prot) : (&quot;&quot;)}`}" include="`${config##}`" count="20"/>

      <Member name="`${numOfActiveFilters}`u" value="{.feature = CY_PF_OL_FEAT_LAST}" include="`${pktFilterEn}`"/>      
    </ConfigStruct>

    <ConfigStruct name="ol_list_0" type="ol_desc_t" const="true" isArray="true" public="false" include="`${pktFilterEn || arpOffload}`">
      <Member name="`${0}`u" value="{&quot;Pkt_Filter&quot;, &amp;cy_pf_ol_cfg_0, &amp;pf_ol_fns, &amp;pf_ol_0}" include="`${pktFilterEn}`" />
      <Member name="`${pktFilterEn ? 1u : 0u}`u" value="{&quot;ARP&quot;, &amp;arp_ol_cfg_0, &amp;arp_ol_fns, &amp;arp_ol_0_ctxt}" include="`${arpOffload}`" />
      <Member name="`${(pktFilterEn ? 1 : 0) + (arpOffload ? 1 : 0)}`u" value="{NULL, NULL, NULL, NULL}" include="`${pktFilterEn || arpOffload}`" />
    </ConfigStruct>
  </ConfigFirmware>
</Personality>