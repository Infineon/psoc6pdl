<?xml version="1.0" encoding="utf-8"?>


<!--****************************************************************************
* \file csd.cypersonality
* \version 1.1
*
* \brief
* CSD personality description file.
*
********************************************************************************
* \copyright
* Copyright 2018-2019 Cypress Semiconductor Corporation
* SPDX-License-Identifier: Apache-2.0
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*****************************************************************************-->

<Personality id="mxs40csd" name="CSD" version="1.1" path="CSD" xmlns="http://cypress.com/xsd/cyhwpersonality_v1">
  <Dependencies>
    <IpBlock name="mxcsdv2" />
    <Resource name="csd\.csd" used="true" />
  </Dependencies>
  <ExposedMembers>
    <ExposedMember key="suppressCodeGen" paramId="suppressAmuxCodeGen" />
  </ExposedMembers>
  <Parameters>
    <!-- PDL documentation -->
    <ParamDoc id="pdlDoc" name="CSD Driver" group="Documentation" default="file:///`${cy_libs_path(&quot;psoc6sw&quot;)}`/docs/pdl_api_reference_manual/html/group__group__csd.html" linkText="Open CSD Driver Documentation" visible="true" desc="Opens the Peripheral Driver Library Documentation" />
    <ParamDoc id="capSenseDoc" name="CapSense Middleware" group="Documentation" default="file:///`${cy_libs_path(&quot;psoc6sw&quot;)}`/docs/capsense_api_reference_manual/html/index.html" linkText="Open CapSense Documentation" visible="true" desc="Opens the CapSense Middleware Library Documentation" />
    <ParamDoc id="csdAdcDoc" name="CSDADC Middleware" group="Documentation" default="file:///`${cy_libs_path(&quot;psoc6sw&quot;)}`/docs/csdadc_api_reference_manual/html/index.html" linkText="Open CSDADC Documentation" visible="true" desc="Opens the CSDADC Middleware Library Documentation" />
    <ParamDoc id="csdIdacDoc" name="CSDIDAC Middleware" group="Documentation" default="file:///`${cy_libs_path(&quot;psoc6sw&quot;)}`/docs/csdidac_api_reference_manual/html/index.html" linkText="Open CSDIDAC Documentation" visible="true" desc="Opens the CSDIDAC Middleware Library Documentation" />

    <!-- ExposedMember -->
    <ParamBool id="suppressAmuxCodeGen" name="Suppress Amuxbus Configuration Code Generation" group="Internal" default="true" visible="false" editable="false" desc="Prevents pins connected to this personality to generate configuration code" />

    <!-- Inputs -->
    <ParamSignal port="clock[0]" name="Clock" group="Inputs" visible="true" desc="Peripheral clock divider" canBeEmpty="false" />

    <!-- VDDA Voltage query -->
    <ParamBool id="isPowerEnabled" name="Is Power Enabled" group="System" default="`${isBlockUsed(&quot;srss[0].power[0]&quot;)}`" visible="false" editable="false" desc="" />
    <ParamRange id="vddaMv" name="VDDA Voltage (mV)" group="System" default="`${isPowerEnabled ? getExposedMember(&quot;srss[0].power[0]&quot;, &quot;vddaMv&quot;) : 3300}`" min="0" max="5000" resolution="1" visible="false" editable="false" desc="VDDA voltage in millivolts" />

    <!-- Peripheral / CPU clock query -->
    <ParamString id="pclk" name="PCLK" group="System" default="`${getBlockFromSignal(&quot;clock[0]&quot;)}`" visible="false" editable="false" desc="Connected peripheral clock divider (PCLK)" />
    <ParamBool id="pclkOk" name="PCLK Valid" group="System" default="`${hasConnection(&quot;clock&quot;, 0) &amp;&amp; isBlockUsed(pclk)}`" visible="false" editable="false" desc="Checks whether there is a PCLK connected and enabled" />
    <ParamRange id="pclkIndex" name="PCLK Index" group="System" default="`${pclkOk ? getExposedMember(pclk, &quot;number&quot;) : 0}`" min="0" max="63" resolution="1" visible="false" editable="false" desc="" />
    <ParamString id="pclkType" name="PCLK Type" group="System" default="`${pclkOk ? getExposedMember(pclk, &quot;type&quot;) : &quot;CY_SYSCLK_DIV_8_BIT&quot;}`" visible="false" editable="false" desc="" />
    <ParamString id="pclkDst" name="PCLK Destination" group="System" default="PCLK_CSD_CLOCK" visible="false" editable="false" desc="" />
    <ParamString id="periClkRsc" name="CLK_PERI Resource" group="System" default="srss[0].clock[0].periclk[0]" visible="false" editable="false" desc="" />
    <ParamBool id="periClkOk" name="CLK_PERI Valid" group="System" default="`${isBlockUsed(periClkRsc)}`" visible="false" editable="false" desc="Checks whether CLK_PERI is enabled" />
    <ParamRange id="periClkFreq" name="CLK_PERI Frequency (Hz)" group="System" default="`${periClkOk ? getExposedMember(periClkRsc, &quot;frequency&quot;) : 0}`" min="0" max="200000000" resolution="1" visible="false" editable="false" desc="Peripheral clock frequency in Hz" />
    <ParamString id="cpuClkRsc" name="CLK_HF0 Resource" group="System" default="srss[0].clock[0].hfclk[0]" visible="false" editable="false" desc="" />
    <ParamBool id="cpuClkOk" name="CLK_HF0 Valid" group="System" default="`${isBlockUsed(cpuClkRsc)}`" visible="false" editable="false" desc="Checks whether CLK_HF0 is enabled" />
    <ParamRange id="cpuClkFreq" name="CLK_HF0 Frequency (Hz)" group="System" default="`${cpuClkOk ? getExposedMember(cpuClkRsc, &quot;frequency&quot;) : 0}`" min="0" max="200000000" resolution="1" visible="false" editable="false" desc="CPU clock frequency in Hz" />

    <!-- CapSense -->
    <ParamBool id="CapSenseEnable" name="Enable CapSense" group="CapSense" default="true" visible="true" editable="true" desc="Enable CapSense function of CSD hardware block" />
    <ParamChoice id="CapSenseCore" name="Target CPU core" group="CapSense" default="4" visible="false" editable="true" desc="Configure the target CPU core for CapSense middleware" >
      <Entry name="Cortex M0+" value="0" visible="true" />
      <Entry name="Cortex M4" value="4" visible="true" />
    </ParamChoice>
    <ParamRange id="SensorCount" name="Sensor count" group="CapSense" default="0" min="0" max="256" resolution="1" visible="false" editable="true" desc="Sensor count" />
    <ParamRange id="CapacitorCount" name="Capacitor count" group="CapSense" default="0" min="0" max="256" resolution="1" visible="false" editable="true" desc="Capacitor count" />
    <Repeat count="256">
      <ParamString id="SensorName$idx" name="SensorName$idx" group="Internal" default="" visible="false" editable="`${$idx &lt; SensorCount}`" desc="" />
    </Repeat>

    <!-- External tools -->
    <ParamString id="cfgFileName" name="cfgFileName" group="External Tools" default="cycfg_capsense.cycapsense" visible="false" editable="false" desc="" />
    <ParamString id="cfgFilePath" name="cfgFilePath" group="External Tools" default="`${cy_design_path() . &quot;/&quot; . cfgFileName}`" visible="false" editable="false" desc="" />
    <ParamCustom id="CapSenseConfigurator" name="CapSense Configurator" group="External Tools" default="0" path="`${cy_tools_path(&quot;capsense-configurator&quot;) . &quot;/capsense-configurator&quot;}`" modal="true" visible="`${CapSenseEnable}`" editable="true" desc="Launch CapSense Configurator">
      <Arg value="`${&quot;--config=&quot; . cfgFilePath}`" />
      <Arg value="`${&quot;--output-dir=&quot; . cy_codegen_path()}`" />
      <Arg value="`${&quot;--design=&quot; . cy_design_file()}`" />
    </ParamCustom>
    <ParamCustom id="CapSenseTuner" name="CapSense Tuner" group="External Tools" default="0" path="`${cy_tools_path(&quot;capsense-configurator&quot;) . &quot;/capsense-tuner&quot;}`" modal="false" visible="`${CapSenseEnable}`" editable="true" desc="Launch CapSense Tuner">
      <Arg value="`${&quot;--config=&quot; . cfgFilePath}`" />
    </ParamCustom>

    <!-- CSDADC -->
    <ParamBool id="CsdAdcEnable" name="Enable CSDADC" group="CSDADC" default="false" visible="true" editable="true" 
            desc="Enable CSDADC function of CSD hardware block. The CSD ADC middleware must be enabled for both cores in the Middleware Selector" />
    <ParamRange id="numChannels" name="Number of Input Channels" group="CSDADC" default="1" min="1" max="32" resolution="1" 
            visible="`${CsdAdcEnable}`" editable="true" desc="Number of channels to scan" />
    <ParamChoice id="resolution" name="Resolution" group="CSDADC" default="CY_CSDADC_RESOLUTION_10BIT" visible="`${CsdAdcEnable}`" editable="true" 
            desc="Configure the CSDADC resolution" >
      <Entry name="8 bit" value="CY_CSDADC_RESOLUTION_8BIT" visible="true" />
      <Entry name="10 bit" value="CY_CSDADC_RESOLUTION_10BIT" visible="true" />
    </ParamChoice>
    <ParamChoice id="range" name="Measurement Range" group="CSDADC" default="CY_CSDADC_RANGE_VDDA" 
            visible="`${CsdAdcEnable}`" editable="true" desc="Configure the CSDADC measurement range" >
      <Entry name="GND to VREF" value="CY_CSDADC_RANGE_VREF" visible="true" />
      <Entry name="GND to VDDA" value="CY_CSDADC_RANGE_VDDA" visible="true" />
    </ParamChoice>
    <ParamRange id="acqTime" name="Acquisition Time (us)" group="CSDADC" default="10" min="1" max="100" resolution="1" 
            visible="`${CsdAdcEnable}`" editable="true" desc="Sample acquisition time interval in microseconds" />
    <ParamRange id="autoCalibrInterval" name="Calibration Interval for Continuous Mode (in number of scans) " group="CSDADC" default="30" min="0" 
            max="120" resolution="1" visible="false" editable="true" desc="Run-time auto-calibration interval. If set to 0 auto-calibration not performed" />
    <ParamRange id="vref" name="VREF Reference Voltage (mV)" group="CSDADC" default="-1" min="-1" max="2700" resolution="1" 
            visible="`${CsdAdcEnable}`" editable="true" desc="Set Vref value in mV. Set -1 to choose Vref automatically depending on VDDA" />
    <ParamRange id="operClkDivider" name="Operation Clock Divider" group="CSDADC" default="1" min="1" max="255" resolution="1" 
            visible="`${CsdAdcEnable}`" editable="true" desc="CSD HW block clock divider" />
    <ParamRange id="azTime" name="Auto-Zero Time (us)" group="CSDADC" default="5" min="1" max="20" resolution="1" 
            visible="`${CsdAdcEnable}`" editable="true" desc="Time interval of comparator auto-zero in microseconds" />
    <ParamRange id="csdInitTime" name="Hardware Initialization Time (us)" group="CSDADC" default="25" min="0" max="100" resolution="1" 
            visible="`${CsdAdcEnable}`" editable="true" desc="CSD HW block initialization time in us for CSDADC MW" />
    <ParamBool id="inFlash" name="Store CSDADC Configuration in Flash" group="CSDADC" default="true" visible="`${CsdAdcEnable}`" editable="true" 
            desc="Controls whether the CSDADC configuration structure is stored in flash (const, true) or SRAM (not const, false)." />

    <!-- CSDIDAC -->
    <ParamBool id="CsdIdacEnable" name="Enable CSDIDAC" group="CSDIDAC" default="false" visible="true" editable="true" 
            desc="Enable a CSDIDAC function of the CSD hardware block. The CSD IDAC middleware must be enabled for both cores in the Middleware Selector" />
    <ParamBool id="CsdIdacAEnable" name="Enable Idac A" group="CSDIDACA" default="false" 
            visible="`${CsdIdacEnable}`" editable="true" desc="Enable an Idac A using." />
    <ParamBool id="IdacAbusOnly" name="Enable Idac A output only on the AmuxBusA" group="CSDIDACA" default="false" 
            visible="`${CsdIdacEnable &amp;&amp; CsdIdacAEnable}`" editable="true" desc="Enables an Idac A output current connection only on the AmuxBusA" />
    <ParamBool id="CsdIdacBEnable" name="Enable Idac B" group="CSDIDACB" default="false" 
            visible="`${CsdIdacEnable}`" editable="true" desc="Enable an Idac B using." />
    <ParamBool id="IdacBbusOnly" name="Enable Idac B output only on the AmuxBusB" group="CSDIDACB" default="false" 
            visible="`${CsdIdacEnable &amp;&amp; CsdIdacBEnable}`" editable="true" desc="Enables an Idac B output current connection only on the AmuxBusB" />
    <ParamRange id="csdIdacInitTime" name="Hardware Initialization Time (us)" group="CSDIDAC" default="25" min="0" max="100" resolution="1" 
            visible="`${CsdIdacEnable}`" editable="true" desc="CSD HW block initialization time in us for CSDIDAC MW" />
    <ParamBool id="idacInFlash" name="Store CSDIDAC Configuration in Flash" group="CSDIDAC" default="true" visible="`${CsdIdacEnable}`" editable="true" 
            desc="Controls whether the CSDIDAC configuration structure is stored in flash (const, true) or SRAM (not const, false)." />
    <ParamString id="idacAnum" name="Active IdacA" group="CSDIDAC" default="`${CsdIdacAEnable &amp;&amp; (!IdacAbusOnly) ? 1 : 0}`" 
            visible="false" editable="false" desc="" />
    <ParamString id="idacBnum" name="Active IdacB" group="CSDIDAC" default="`${CsdIdacBEnable &amp;&amp; (!IdacBbusOnly) ? 1 : 0}`" 
            visible="false" editable="false" desc="" />
    <ParamString id="idacNum" name="Active Idac Number" group="CSDIDAC" default="`${idacAnum + idacBnum}`" visible="false" editable="false" desc="" />

    <!-- Common MUX for sensors, ADC inputs and IDAC outputs -->
    <ParamMux id="sense" name="Sensors" group="Sensors" allowedIp="^(csd|ioss)">
        <Common port="amuxbus_a[0]" />
        <Common port="amuxbus_b[0]" />
        <Arm name="`${($idx &lt; SensorCount) ? SensorName$idx : (($idx &lt; (SensorCount + numChannels)) ? 
        &quot;Channel[&quot; .($idx - SensorCount). &quot;]&quot; : ((CsdIdacAEnable &amp;&amp; ($idx &lt; (SensorCount + numChannels + idacAnum))) ? 
        &quot;IdacAoutput&quot; : (CsdIdacBEnable &amp;&amp; ($idx &lt; (SensorCount + numChannels + idacAnum + idacBnum)) ? 
        &quot;IdacBoutput&quot; : &quot;NoName&quot;)))}`" 
        desc="`${($idx &lt; SensorCount) ? &quot;Pin connection for sense[$idx] signal&quot; : (($idx &lt; (SensorCount + numChannels)) ? 
        &quot;Pin connection for CSDADC channel[&quot; .($idx - SensorCount). &quot;]&quot; : 
        ((CsdIdacAEnable &amp;&amp; (($idx - SensorCount - numChannels) &lt; idacAnum)) ? &quot;Pin connection for CSD IdacA Output&quot; : 
        (CsdIdacBEnable ? &quot;Pin connection for CSD IdacB Output&quot; : &quot;NoName&quot;)))}`"
        visible="`${(CapSenseEnable &amp;&amp; ($idx &lt; SensorCount)) || 
        (CsdAdcEnable &amp;&amp; ($idx &gt;= SensorCount) &amp;&amp; ($idx &lt; SensorCount + numChannels)) || 
        (CsdIdacEnable &amp;&amp; ($idx &gt;= SensorCount + numChannels) &amp;&amp; ($idx &lt; SensorCount + numChannels + idacNum))}`" 
        canBeEmpty="`${!((CapSenseEnable &amp;&amp; ($idx &lt; SensorCount)) || 
        (CsdAdcEnable &amp;&amp; ($idx &gt;= SensorCount) &amp;&amp; ($idx &lt; SensorCount + numChannels)) || 
        (CsdIdacEnable &amp;&amp; ($idx &gt;= SensorCount + numChannels) &amp;&amp; ($idx &lt; SensorCount + numChannels + idacNum)))}`" 
        group="`${($idx &lt; SensorCount) ? ( ($idx &lt; CapacitorCount) ? &quot;CapSense Capacitors&quot; : &quot;CapSense Sensors&quot; ) : 
        (($idx &lt; (SensorCount + numChannels)) ? &quot;CSDADC Channels&quot; : &quot;CSDIDAC Outputs&quot;)}`" repeatCount="290"/>
    </ParamMux>
    <Repeat count="256">
      <ParamString id="SensorSignal$idx" name="" group="Sensors" default="`${$idx &lt; SensorCount ? getBlockFromSignalValue(getMuxArmSignal(&quot;sense&quot;, $idx)) : &quot;&quot;}`" visible="false" editable="false" desc="" />
    </Repeat>
    <Repeat count="32">
      <ParamString id="ChannelSignal$idx" name="" group="Sensors" default="`${$idx &lt; numChannels ? getBlockFromSignalValue(getMuxArmSignal(&quot;sense&quot;, $idx + SensorCount)) : &quot;&quot;}`" visible="false" editable="false" desc="" />
    </Repeat>
    <ParamString id="IdacAsignal" name="" group="Sensors" default="`${CsdIdacAEnable ? getBlockFromSignalValue(getMuxArmSignal(&quot;sense&quot;, SensorCount + numChannels)) : &quot;&quot;}`" visible="false" editable="false" desc="" />
    <ParamString id="IdacBsignal" name="" group="Sensors" default="`${CsdIdacBEnable ? getBlockFromSignalValue(getMuxArmSignal(&quot;sense&quot;, SensorCount + numChannels + idacAnum)) : &quot;&quot;}`" visible="false" editable="false" desc="" />
    
    <!-- CSD instance number -->
    <ParamString id="InstNumber" name="InstNumber" group="Internal" default="`${getInstNumber(&quot;csd&quot;)}`" visible="false" editable="false" desc="CSD Instance name number." />
    
  </Parameters>

  <DRCs>
    <DRC type="ERROR" text="CLK_PERI clock is not enabled" condition="`${!periClkOk}`" >
      <FixIt action="ENABLE_BLOCK" target="`${periClkRsc}`" value="" valid="true" />
    </DRC>
    <DRC type="ERROR" text="CLK_HF0 clock is not enabled" condition="`${!cpuClkOk}`" >
      <FixIt action="ENABLE_BLOCK" target="`${cpuClkRsc}`" value="" valid="true" />
    </DRC>
  </DRCs>

  <ConfigFirmware>
    <!-- External tools -->
    <ConfigTool value="`${cy_tools_path(&quot;capsense-configurator&quot;) . &quot;/capsense-configurator&quot;}`" include="true">
      <Arg value="`${&quot;--config=&quot; . cfgFilePath}`" />
      <Arg value="`${&quot;--output-dir=&quot; . cy_codegen_path()}`" />
      <Arg value="`${&quot;--generate&quot;}`" />
    </ConfigTool>
    <ConfigInclude value="cy_sysclk.h" include="`${pclkOk}`" />
    <ConfigInclude value="cy_csd.h" include="`${CsdAdcEnable || CapSenseEnable || CsdIdacEnable}`" />
    <ConfigInclude value="cy_csdadc.h" include="`${CsdAdcEnable}`" />
    <ConfigInclude value="cy_csdidac.h" include="`${CsdIdacEnable}`" />
    <ConfigDefine name="CY_CAPSENSE_CORE" value="`${CapSenseCore}`u" public="true" include="`${CapSenseEnable}`" />
    <ConfigDefine name="CY_CAPSENSE_CPU_CLK" value="`${cpuClkFreq}`u" public="true" include="`${CapSenseEnable &amp;&amp; cpuClkOk}`" />
    <ConfigDefine name="CY_CAPSENSE_PERI_CLK" value="`${periClkFreq}`u" public="true" include="`${CapSenseEnable &amp;&amp; periClkOk}`" />
    <ConfigDefine name="CY_CAPSENSE_VDDA_MV" value="`${vddaMv}`u" public="true" include="`${CapSenseEnable}`" />
    <ConfigDefine name="CY_CAPSENSE_PERI_DIV_TYPE" value="`${pclkType}`" public="true" include="`${CapSenseEnable}`" />
    <ConfigDefine name="CY_CAPSENSE_PERI_DIV_INDEX" value="`${pclkIndex}`u" public="true" include="`${CapSenseEnable}`" />
    <ConfigDefine name="`${SensorName$idx}`_PORT" value="GPIO_PRT`${getInstFromLocation(getParamValue(&quot;SensorSignal$idx&quot;), &quot;port&quot;)}`" public="true" include="`${CapSenseEnable &amp;&amp; ($idx &lt; SensorCount) &amp;&amp; isBlockUsed(SensorSignal$idx)}`" repeatCount="256" />
    <ConfigDefine name="`${SensorName$idx}`_PIN" value="`${getInstFromLocation(getParamValue(&quot;SensorSignal$idx&quot;), &quot;pin&quot;)}`u" public="true" include="`${($idx &lt; SensorCount) &amp;&amp; isBlockUsed(SensorSignal$idx)}`" repeatCount="256" />
    <ConfigDefine name="`${SensorName$idx}`_PORT_NUM" value="`${getInstFromLocation(getParamValue(&quot;SensorSignal$idx&quot;), &quot;port&quot;)}`u" public="true" include="`${($idx &lt; CapacitorCount) &amp;&amp; isBlockUsed(SensorSignal$idx)}`" repeatCount="4" />
    <ConfigDefine name="`${INST_NAME}`_HW" value="CSD`${InstNumber}`" public="true" include="`${CsdAdcEnable || CapSenseEnable || CsdIdacEnable}`" />
    <ConfigDefine name="`${INST_NAME}`_IRQ" value="csd_interrupt_IRQn" public="true" include="`${CsdAdcEnable || CapSenseEnable}`" />
    <ConfigDefine name="`${INST_NAME}`_CSDADC_CHANN_NUM" value="`${numChannels}`u" public="true" include="`${CsdAdcEnable}`" />
    <ConfigDefine name="`${INST_NAME}`_CSDADC_ALL_CHAN_MASK" value="((1u &lt;&lt; `${INST_NAME}`_CSDADC_CHANN_NUM) - 1u)" public="true" 
            include="`${CsdAdcEnable}`" />
    <ConfigStruct name="cy_csd_`${InstNumber}`_context" type="cy_stc_csd_context_t" const="false" public="true" 
            include="`${CsdAdcEnable || CapSenseEnable || CsdIdacEnable}`" >
        <Member name="lockKey" value="CY_CSD_NONE_KEY" />
    </ConfigStruct>
    <ConfigStruct name="`${INST_NAME}`_csdadc_ch$idx_pin" type="cy_stc_csdadc_ch_pin_t" const="`${inFlash}`" public="false" include="`${CsdAdcEnable &amp;&amp; (numChannels &gt; $idx) &amp;&amp; isBlockUsed(ChannelSignal$idx)}`" repeatCount="32">
        <Member name="ioPcPtr" value="GPIO_PRT`${getInstFromLocation(getParamValue(&quot;ChannelSignal$idx&quot;), &quot;port&quot;)}`" />
        <Member name="pin" value="`${getInstFromLocation(getParamValue(&quot;ChannelSignal$idx&quot;), &quot;pin&quot;)}`u" />
    </ConfigStruct>
    <ConfigStruct name="`${INST_NAME}`_csdidac_a_pin" type="cy_stc_csdidac_pin_t" const="`${inFlash}`" public="false" 
            include="`${CsdIdacEnable &amp;&amp; CsdIdacAEnable &amp;&amp; isBlockUsed(IdacAsignal) &amp;&amp; (!IdacAbusOnly)}`">
        <Member name="ioPcPtr" value="GPIO_PRT`${getInstFromLocation(getParamValue(&quot;IdacAsignal&quot;), &quot;port&quot;)}`" />
        <Member name="pin" value="`${getInstFromLocation(getParamValue(&quot;IdacAsignal&quot;), &quot;pin&quot;)}`u" />
    </ConfigStruct>
    <ConfigStruct name="`${INST_NAME}`_csdidac_b_pin" type="cy_stc_csdidac_pin_t" const="`${inFlash}`" public="false" 
    include="`${CsdIdacEnable &amp;&amp; CsdIdacBEnable &amp;&amp; isBlockUsed(IdacBsignal) &amp;&amp; (!IdacBbusOnly)}`">
        <Member name="ioPcPtr" value="GPIO_PRT`${getInstFromLocation(getParamValue(&quot;IdacBsignal&quot;), &quot;port&quot;)}`" />
        <Member name="pin" value="`${getInstFromLocation(getParamValue(&quot;IdacBsignal&quot;), &quot;pin&quot;)}`u" />
    </ConfigStruct>
    <ConfigStruct name="`${INST_NAME}`_csdadc_config" type="cy_stc_csdadc_config_t" const="`${inFlash}`" public="true" include="`${CsdAdcEnable}`">
      <Member name="ptrPin" value="{
`${numChannels &gt; 0 ? &quot;(const cy_stc_csdadc_ch_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdadc_ch0_pin&quot; : &quot;0UL&quot;}`,
`${numChannels &gt; 1 ? &quot;(const cy_stc_csdadc_ch_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdadc_ch1_pin&quot; : &quot;0UL&quot;}`,
`${numChannels &gt; 2 ? &quot;(const cy_stc_csdadc_ch_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdadc_ch2_pin&quot; : &quot;0UL&quot;}`,
`${numChannels &gt; 3 ? &quot;(const cy_stc_csdadc_ch_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdadc_ch3_pin&quot; : &quot;0UL&quot;}`,
`${numChannels &gt; 4 ? &quot;(const cy_stc_csdadc_ch_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdadc_ch4_pin&quot; : &quot;0UL&quot;}`,
`${numChannels &gt; 5 ? &quot;(const cy_stc_csdadc_ch_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdadc_ch5_pin&quot; : &quot;0UL&quot;}`,
`${numChannels &gt; 6 ? &quot;(const cy_stc_csdadc_ch_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdadc_ch6_pin&quot; : &quot;0UL&quot;}`,
`${numChannels &gt; 7 ? &quot;(const cy_stc_csdadc_ch_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdadc_ch7_pin&quot; : &quot;0UL&quot;}`,
`${numChannels &gt; 8 ? &quot;(const cy_stc_csdadc_ch_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdadc_ch8_pin&quot; : &quot;0UL&quot;}`,
`${numChannels &gt; 9 ? &quot;(const cy_stc_csdadc_ch_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdadc_ch9_pin&quot; : &quot;0UL&quot;}`,
`${numChannels &gt; 10 ? &quot;(const cy_stc_csdadc_ch_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdadc_ch10_pin&quot; : &quot;0UL&quot;}`,
`${numChannels &gt; 11 ? &quot;(const cy_stc_csdadc_ch_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdadc_ch11_pin&quot; : &quot;0UL&quot;}`,
`${numChannels &gt; 12 ? &quot;(const cy_stc_csdadc_ch_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdadc_ch12_pin&quot; : &quot;0UL&quot;}`,
`${numChannels &gt; 13 ? &quot;(const cy_stc_csdadc_ch_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdadc_ch13_pin&quot; : &quot;0UL&quot;}`,
`${numChannels &gt; 14 ? &quot;(const cy_stc_csdadc_ch_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdadc_ch14_pin&quot; : &quot;0UL&quot;}`,
`${numChannels &gt; 15 ? &quot;(const cy_stc_csdadc_ch_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdadc_ch15_pin&quot; : &quot;0UL&quot;}`,
`${numChannels &gt; 16 ? &quot;(const cy_stc_csdadc_ch_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdadc_ch16_pin&quot; : &quot;0UL&quot;}`,
`${numChannels &gt; 17 ? &quot;(const cy_stc_csdadc_ch_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdadc_ch17_pin&quot; : &quot;0UL&quot;}`,
`${numChannels &gt; 18 ? &quot;(const cy_stc_csdadc_ch_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdadc_ch18_pin&quot; : &quot;0UL&quot;}`,
`${numChannels &gt; 19 ? &quot;(const cy_stc_csdadc_ch_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdadc_ch19_pin&quot; : &quot;0UL&quot;}`,
`${numChannels &gt; 20 ? &quot;(const cy_stc_csdadc_ch_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdadc_ch20_pin&quot; : &quot;0UL&quot;}`,
`${numChannels &gt; 21 ? &quot;(const cy_stc_csdadc_ch_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdadc_ch21_pin&quot; : &quot;0UL&quot;}`,
`${numChannels &gt; 22 ? &quot;(const cy_stc_csdadc_ch_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdadc_ch22_pin&quot; : &quot;0UL&quot;}`,
`${numChannels &gt; 23 ? &quot;(const cy_stc_csdadc_ch_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdadc_ch23_pin&quot; : &quot;0UL&quot;}`,
`${numChannels &gt; 24 ? &quot;(const cy_stc_csdadc_ch_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdadc_ch24_pin&quot; : &quot;0UL&quot;}`,
`${numChannels &gt; 25 ? &quot;(const cy_stc_csdadc_ch_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdadc_ch25_pin&quot; : &quot;0UL&quot;}`,
`${numChannels &gt; 26 ? &quot;(const cy_stc_csdadc_ch_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdadc_ch26_pin&quot; : &quot;0UL&quot;}`,
`${numChannels &gt; 27 ? &quot;(const cy_stc_csdadc_ch_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdadc_ch27_pin&quot; : &quot;0UL&quot;}`,
`${numChannels &gt; 28 ? &quot;(const cy_stc_csdadc_ch_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdadc_ch28_pin&quot; : &quot;0UL&quot;}`,
`${numChannels &gt; 29 ? &quot;(const cy_stc_csdadc_ch_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdadc_ch29_pin&quot; : &quot;0UL&quot;}`,
`${numChannels &gt; 30 ? &quot;(const cy_stc_csdadc_ch_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdadc_ch30_pin&quot; : &quot;0UL&quot;}`,
`${numChannels &gt; 31 ? &quot;(const cy_stc_csdadc_ch_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdadc_ch31_pin&quot; : &quot;0UL&quot;}`}"/>
      <Member name="base" value="`${INST_NAME}`_HW" />
      <Member name="periClk" value="`${periClkFreq}`u"/>
      <Member name="vref" value="`${vref}`"/>
      <Member name="vdda" value="`${vddaMv}`u"/>
      <Member name="calibrInterval" value="`${autoCalibrInterval}`u"/>
      <Member name="range" value="`${range}`"/>
      <Member name="resolution" value="`${resolution}`"/>
      <Member name="periDivTyp" value="`${pclkType}`"/>
      <Member name="numChannels" value="`${numChannels}`u"/>
      <Member name="idac" value="31u"/>
      <Member name="operClkDivider" value="`${operClkDivider}`u"/>
      <Member name="azTime" value="`${azTime}`u"/>
      <Member name="acqTime" value="`${acqTime}`u"/>
      <Member name="csdInitTime" value="`${csdInitTime}`u"/>
      <Member name="idacCalibrationEn" value="0u"/>
      <Member name="periDivInd" value="`${pclkIndex}`u"/>
      <Member name="csdCxtPtr" value="&amp;cy_csd_`${InstNumber}`_context"/>
    </ConfigStruct>
    <ConfigStruct name="`${INST_NAME}`_csdidac_config" type="cy_stc_csdidac_config_t" const="`${inFlash}`" public="true" include="`${CsdIdacEnable}`">
      <Member name="base" value="`${INST_NAME}`_HW" />
      <Member name="csdCxtPtr" value="&amp;cy_csd_`${InstNumber}`_context"/>
      <Member name="periClk" value="`${periClkFreq}`u"/>
      <Member name="busOnlyA" value="`${IdacAbusOnly ? &quot;CY_CSDIDAC_ENABLE&quot; : &quot;CY_CSDIDAC_DISABLE&quot;}`"/>
      <Member name="ptrPinA" value="`${CsdIdacAEnable  &amp;&amp; (!IdacAbusOnly)? 
            &quot;(const cy_stc_csdidac_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdidac_a_pin&quot; : &quot;NULL&quot;}`"/>
      <Member name="busOnlyB" value="`${IdacBbusOnly ? &quot;CY_CSDIDAC_ENABLE&quot; : &quot;CY_CSDIDAC_DISABLE&quot;}`"/>
      <Member name="ptrPinB" value="`${CsdIdacBEnable  &amp;&amp; (!IdacBbusOnly)? 
            &quot;(const cy_stc_csdidac_pin_t *) &amp;&quot; . INST_NAME . &quot;_csdidac_b_pin&quot; : &quot;NULL&quot;}`"/>
      <Member name="csdInitTime" value="`${csdIdacInitTime}`u"/>
    </ConfigStruct>
    <ConfigInstruction value="Cy_SysClk_PeriphAssignDivider(`${pclkDst}`, `${getExposedMember(pclk, &quot;clockSel&quot;)}`);" include="`${pclkOk}`" />
  </ConfigFirmware>
</Personality>
